package biblioteca.aplication;

import java.io.IOException;
import java.util.ArrayList;

import biblioteca.controller.BibliotecaController;
import biblioteca.controller.InicioSesionController;
import biblioteca.model.Biblioteca;
import biblioteca.model.Estudiante;
import biblioteca.model.EstudianteException;
import biblioteca.model.Usuario;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;

public class Aplicacion extends Application{

	private Stage primaryStage;
	Biblioteca biblioteca = new Biblioteca("Uniquindio");


	@Override
	public void start(Stage primaryStage) {

		this.primaryStage = primaryStage;
		this.primaryStage.setTitle("Biblioteca");
		mostrarVentanaInicioSesion();

	}
	public void mostrarVentanaPrincipal() {

		try {
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(Aplicacion.class.getResource("../views/Estudiante.fxml"));

			AnchorPane rootLayout = (AnchorPane)loader.load();

			BibliotecaController bibliotecaController = loader.getController();
			bibliotecaController.setAplicacion(this);

			Scene scene = new Scene(rootLayout);
			primaryStage.setScene(scene);
			primaryStage.show();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}



	public void mostrarVentanaInicioSesion() {
		try {
			FXMLLoader loader = new FXMLLoader();
			loader.setLocation(Aplicacion.class.getResource("../views/InicioSesion.fxml"));

			AnchorPane rootLayout = (AnchorPane)loader.load();

			InicioSesionController inicioSesionController = loader.getController();
			inicioSesionController.setAplicacion(this);

			Scene scene = new Scene(rootLayout);
			primaryStage.setScene(scene);
			primaryStage.show();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


	public static void main(String[] args) {
		launch(args);
	}


	public ArrayList<Estudiante> obtenerEstudiantes() {
			return biblioteca.getListaEstudiantes();
	}

	public Estudiante crearEstudiante(String nombre, String apellidos, String identificacion,Usuario usuario) throws EstudianteException {

		return biblioteca.crearEstudiante(nombre,apellidos,identificacion, usuario);
	}
	public boolean verificarUsuario(String usuario, String contrasenia) {

		return biblioteca.verificarUsuario(usuario,contrasenia);
	}
	public void actualizarEstudiante(String identificacion, String nombre, String apellido, String documento,
			String usuario, String contrasenia) {

		biblioteca.actualizarEstudiante( identificacion,  nombre,  apellido,  documento,
				 usuario,  contrasenia);

	}
	public boolean eliminarEstudiante(String identificacion) {
		return biblioteca.eliminarEstudiante(identificacion);

	}


}
